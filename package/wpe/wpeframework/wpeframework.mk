################################################################################
#
# WPEFramework
#
################################################################################

WPEFRAMEWORK_VERSION = e9d1a389462d091097faea81a17dff94c9ee1d7c
WPEFRAMEWORK_SITE_METHOD = git
WPEFRAMEWORK_SITE = git@github.com:WebPlatformForEmbedded/WPEFramework.git
WPEFRAMEWORK_INSTALL_STAGING = YES
WPEFRAMEWORK_DEPENDENCIES = zlib

WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_TEST_APPS=ON -DWPEFRAMEWORK_TEST_LOADER=ON -DWPEFRAMEWORK_RPC=ON
WPEFRAMEWORK_CONF_OPTS += -DBUILD_REFERENCE=$(WPEFRAMEWORK_VERSION) -DTREE_REFERENCE=$(shell $(GIT) rev-parse HEAD)
WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_PORT=$(BR2_PACKAGE_WPEFRAMEWORK_PORT)
WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_BINDING=$(BR2_PACKAGE_WPEFRAMEWORK_BIND)
WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_IDLE_TIME=$(BR2_PACKAGE_WPEFRAMEWORK_IDLE_TIME)
WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_PERSISTENT_PATH=$(BR2_PACKAGE_WPEFRAMEWORK_PERSISTENT_PATH)
WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_DATA_PATH=$(BR2_PACKAGE_WPEFRAMEWORK_DATA_PATH)
WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_SYSTEM_PATH=$(BR2_PACKAGE_WPEFRAMEWORK_SYSTEM_PATH)
WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_PROXYSTUB_PATH=$(BR2_PACKAGE_WPEFRAMEWORK_PROXYSTUB_PATH)
WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_OOMADJUST=$(BR2_PACKAGE_WPEFRAMEWORK_OOM_ADJUST)


# WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_WEBSERVER_PATH=
# WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_WEBSERVER_PORT=
# WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_CONFIG_INSTALL_PATH=
# WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_IPV6_SUPPORT=
# WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_PRIORITY=
# WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_POLICY=
# WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_STACKSIZE=

ifeq ($(BR2_PACKAGE_WPEFRAMEWORK_DEBUG),y)
WPEFRAMEWORK_CONF_OPTS += -DCMAKE_BUILD_TYPE=Debug
#WPEFRAMEWORK_CONF_OPTS += -DCMAKE_CXX_FLAGS='-g -Og'
endif

ifeq ($(BR2_PACKAGE_WPEFRAMEWORK_VERBOSE_BUILD),y)
WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_VERBOSE_BUILD=ON
endif

ifeq ($(BR2_PACKAGE_WPEFRAMEWORK_VIRTUALINPUT),y)		
WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_VIRTUALINPUT=ON		
endif

ifeq ($(BR2_PACKAGE_WPEFRAMEWORK_PROVISIONPROXY),y)		
WPEFRAMEWORK_CONF_OPTS += -DWPEFRAMEWORK_PROVISIONPROXY=ON		
WPEFRAMEWORK_DEPENDENCIES = libprovision
endif

ifeq ($(BR2_PACKAGE_MARVELL_AMPSDK),y)
WPEFRAMEWORK_CONF_OPTS += -DCMAKE_EXE_LINKER_FLAGS=" -lEGL -lGLESv2 "
endif

define WPEFRAMEWORK_POST_TARGET_INITD
    mkdir -p $(TARGET_DIR)/etc/init.d
    $(INSTALL) -D -m 0755 $(WPEFRAMEWORK_PKGDIR)/S80WPEFramework $(TARGET_DIR)/etc/init.d
endef

define WPEFRAMEWORK_POST_TARGET_REMOVE_STAGING_ARTIFACTS
    mkdir -p $(TARGET_DIR)/etc/WPEFramework
    rm -rf $(TARGET_DIR)/usr/share/WPEFramework/cmake
endef

define WPEFRAMEWORK_POST_TARGET_REMOVE_HEADERS
    rm -rf $(TARGET_DIR)/usr/include/WPEFramework
endef


WPEFRAMEWORK_PKGDIR = "$(TOP_DIR)/package/wpe/wpeframework"
define WPEFRAMEWORK_APPLY_LOCAL_PATCHES
        $(APPLY_PATCHES) $(@D) $(WPEFRAMEWORK_PKGDIR) 0001-ampsamples_interface.patch.conditional;
endef
ifeq ($(BR2_PACKAGE_MARVELL_AMPSDK),y)
WPEFRAMEWORK_POST_PATCH_HOOKS += WPEFRAMEWORK_APPLY_LOCAL_PATCHES
endif

ifneq ($(BR2_PACKAGE_WPEFRAMEWORK_DISABLE_INITD),y)
WPEFRAMEWORK_POST_INSTALL_TARGET_HOOKS += WPEFRAMEWORK_POST_TARGET_INITD
endif

WPEFRAMEWORK_POST_INSTALL_TARGET_HOOKS += WPEFRAMEWORK_POST_TARGET_REMOVE_STAGING_ARTIFACTS
ifneq ($(BR2_PACKAGE_WPEFRAMEWORK_INSTALL_HEADERS),y)
WPEFRAMEWORK_POST_INSTALL_TARGET_HOOKS += WPEFRAMEWORK_POST_TARGET_REMOVE_HEADERS
endif

$(eval $(cmake-package))
