diff -rup cobalt/src/starboard/raspi/shared/gyp_configuration.gypi cobalt.fixed/src/starboard/raspi/shared/gyp_configuration.gypi
--- cobalt/src/starboard/raspi/shared/gyp_configuration.gypi	2017-10-05 11:14:25.000000000 +0530
+++ cobalt.fixed/src/starboard/raspi/shared/gyp_configuration.gypi	2017-11-13 14:16:00.003878442 +0530
@@ -130,6 +130,7 @@
       '-lbcm_host',
       '-lvcos',
       '-lvchiq_arm',
+      '-lvchostif',
     ],
     'conditions': [
       ['cobalt_fastbuild==0', {
diff -rup cobalt/src/starboard/raspi/shared/gyp_configuration.py cobalt.fixed/src/starboard/raspi/shared/gyp_configuration.py
--- cobalt/src/starboard/raspi/shared/gyp_configuration.py	2017-10-05 11:14:25.000000000 +0530
+++ cobalt.fixed/src/starboard/raspi/shared/gyp_configuration.py	2017-11-13 14:15:17.771878657 +0530
@@ -38,7 +38,7 @@ class RaspiPlatformConfig(config.starboa
 
   def GetVariables(self, configuration):
     raspi_home = self._GetRasPiHome()
-    sysroot = os.path.realpath(os.path.join(raspi_home, 'sysroot'))
+    sysroot = os.path.realpath(os.path.join(raspi_home, 'arm-buildroot-linux-gnueabihf/sysroot'))
     if not os.path.isdir(sysroot):
       logging.critical('RasPi builds require $RASPI_HOME/sysroot '
                        'to be a valid directory.')
@@ -52,15 +52,15 @@ class RaspiPlatformConfig(config.starboa
     return variables
 
   def GetEnvironmentVariables(self):
-    env_variables = gyp_utils.GetHostCompilerEnvironment()
+    env_variables = { }
     raspi_home = self._GetRasPiHome()
 
     toolchain = os.path.realpath(os.path.join(
         raspi_home,
-        'tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64'))
+        '.'))
     toolchain_bin_dir = os.path.join(toolchain, 'bin')
     env_variables.update({
-        'CC': os.path.join(toolchain_bin_dir, 'arm-linux-gnueabihf-gcc'),
-        'CXX': os.path.join(toolchain_bin_dir, 'arm-linux-gnueabihf-g++'),
+        'CC': os.path.join(toolchain_bin_dir, 'arm-buildroot-linux-gnueabihf-gcc'),
+        'CXX': os.path.join(toolchain_bin_dir, 'arm-buildroot-linux-gnueabihf-g++'),
     })
     return env_variables
diff -rup cobalt/src/starboard/shared/ffmpeg/ffmpeg_audio_decoder.cc cobalt.fixed/src/starboard/shared/ffmpeg/ffmpeg_audio_decoder.cc
--- cobalt/src/starboard/shared/ffmpeg/ffmpeg_audio_decoder.cc	2017-10-05 11:14:25.000000000 +0530
+++ cobalt.fixed/src/starboard/shared/ffmpeg/ffmpeg_audio_decoder.cc	2017-11-13 14:17:36.211877953 +0530
@@ -89,7 +89,7 @@ void AudioDecoder::Decode(const scoped_r
   packet.data = const_cast<uint8_t*>(input_buffer->data());
   packet.size = input_buffer->size();
 
-  avcodec_get_frame_defaults(av_frame_);
+  av_frame_unref(av_frame_);
   int frame_decoded = 0;
   int result =
       avcodec_decode_audio4(codec_context_, av_frame_, &frame_decoded, &packet);
@@ -245,7 +245,7 @@ void AudioDecoder::InitializeCodec() {
     return;
   }
 
-  av_frame_ = avcodec_alloc_frame();
+  av_frame_ = av_frame_alloc();
   if (av_frame_ == NULL) {
     SB_LOG(ERROR) << "Unable to allocate audio frame";
     TeardownCodec();
